
pred n = natCase n (\_. 0) (\p. p);

fix equal m n t f =
  natCase m (\_. natCase n (\_. t unit) (\_. f unit))
            (\pm. natCase n (\_. f unit) (\pn. equal pm pn t f));

fix lt m n t f =
  natCase m (\_. natCase n (\_. f unit) (\_. t unit))
            (\pm. natCase n (\_. f unit) (\pn. lt pm pn t f));


fix add m n = natCase m (\_. n) (\p. S (add p n));

fix mult m n = natCase m (\_. 0) (\p. add n (mult p n));

fix pow m n = natCase n (\_. 1) (\p. mult m (pow m p));

fix sub m n = natCase n (\_. m) (\p. sub (pred m) p);

fix div m n = lt m n (\_. 0) (\_. S (div (sub m n) n));

fix rem m n = lt m n (\_. m) (\_. rem (sub m n) n);


fix fact n = natCase n (\_. S 0) (\p. mult n (fact p));

fix repeatedly n f x = natCase n (\_. x) (\p. f (repeatedly p f x));